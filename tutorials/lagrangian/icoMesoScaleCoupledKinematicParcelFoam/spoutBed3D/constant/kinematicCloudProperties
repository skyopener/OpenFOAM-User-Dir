/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      kinematicCloudProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solution
{
    active          true;
    coupled         true;
    transient       yes;
    cellValueSourceCorrection off;

    interpolationSchemes
    {
        rho             cell;
        U1              cellPoint;
        mu              cell;
        DUcDt           cell;
    }

    integrationSchemes
    {
        U               Euler;
    }
    
    sourceTerms
    {
        schemes
        {
            U    semiImplicit 1;
        }
    }
}

constantProperties
{
    rho0            2700;
    youngsModulus   1e6;
    poissonsRatio   0.25;
}

subModels
{
    particleForces
    {
        gravity;
        ErgunPlusWenYuDrag;
        explicitPressureGradient;
    }

    injectionModels
    {
        model1
        {
            type            none;//manualInjection;//
            massTotal       0;
            parcelBasisType fixed;
            nParticle       1;
            SOI             0;
            positionsFile   "kinematicCloudPositions";
            U0              ( 0 0 0 );
            sizeDistribution
            {
                type        fixedValue;
                fixedValueDistribution
                {
                    value   0.003;
                }
            }
        }

    }

    dispersionModel none;

    patchInteractionModel none;
    
    surfaceFilmModel none;

    collisionModel pairCollision;

    pairCollisionCoeffs
    {
        // Maximum possible particle diameter expected at any time
        maxInteractionDistance  0.003;

        writeReferredParticleCloud no;

        pairModel pairSpringSliderDashpot;

        pairSpringSliderDashpotCoeffs
        {
            useEquivalentSize   no;
            alpha               0.12;
            b                   1.5;
            mu                  0.3;
            cohesionEnergyDensity 0;
            collisionResolutionSteps 12;
        };

        wallModel    stationaryWallLocalSpringSliderDashpot;
        
        wallSpringSliderDashpotCoeffs
        {
            youngsModulus   1e6;
            poissonsRatio   0.25;
            alpha           0.12;
            b               1.5;
            mu              0.3;
            cohesionEnergyDensity 0;
            collisionResolutionSteps 12;
            useEquivalentSize no;
        }

        stationaryWallLocalSpringSliderDashpotCoeffs
        {
            useEquivalentSize no;
            collisionResolutionSteps 12;
            fixedWalls
            {
                youngsModulus   1e6;
                poissonsRatio   0.25;
                alpha           0.12;
                b               1.5;
                mu              0.3;
                cohesionEnergyDensity 0;
            }
            inlet
            {
                youngsModulus   1e6;
                poissonsRatio   0.25;
                alpha           0.12;
                b               1.5;
                mu              0.3;
                cohesionEnergyDensity 0;
            }
            outlet
            {
                youngsModulus   1e6;
                poissonsRatio   0.25;
                alpha           0.12;
                b               1.5;
                mu              0.3;
                cohesionEnergyDensity 0;
            }
        };
    }
}


cloudFunctions
{
    voidFractionNumber;
    cellAverageParticleVelocity;
}

// ************************************************************************* //
